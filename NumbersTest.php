<?php

require_once 'Numbers.php';

/**
 * Class NumbersTest
 *
 * @author "Vladimir Pasechnik" <vladimir.pasechnik@gamil.com>
 * @licence LGPL
 * @link http://www.hexgen.tk/
 *
 */
class NumbersTest extends PHPUnit_Framework_TestCase
{

    private $_numbers = null;
    private $_input = '74952200000-74952209999;74952210000-74952210099;74952211000-74952211019;74952211050-74952211132;74952211134-74952211154';
    private $_expected = [
        7495220,
        749522100,
        7495221100,
        7495221101,
        7495221105,
        7495221106,
        7495221107,
        7495221108,
        7495221109,
        7495221110,
        7495221111,
        7495221112,
        74952211130,
        74952211131,
        74952211132,
        74952211134,
        74952211135,
        74952211136,
        74952211137,
        74952211138,
        74952211139,
        7495221114,
        74952211150,
        74952211151,
        74952211152,
        74952211153,
        74952211154
    ];

    public function setUp()
    {
        $this->_numbers = new Numbers();
    }

    public function tearDown()
    {
        $this->_numbers = null;
    }

    /**
     * @return Numbers
     */
    public function numbers()
    {
        return $this->_numbers;
    }

    public function input()
    {
        return $this->_input;
    }

    public function expected()
    {
        return $this->_expected;
    }

    public function testObject()
    {
        $this->assertNotNull($this->numbers());
    }


    /**
     * @dataProvider providerCommonPart
     */
    public
    function testCommonPart(
        $a,
        $b,
        $c
    ) {

        $this->assertEquals($c, $this->numbers()->getCommonPart([$a, $b]));
//        $my = new MyClass();
//        $this->assertEquals($c, $my->power($a, $b));
    }

    public function providerCommonPart()
    {
        return [
            ['74952200000', '74952209999', '7495220'],
            ['74952210000', '74952210099', '749522100'],
            ['74952211000', '74952211019', '749522110'],
            ['74952211050', '74952211132', '74952211'],
            ['74952211134', '74952211154', '749522111'],
        ];
    }

    public function providerPrefixes()
    {
        return [
            [
                '010-018',
                [
                    '010',
                    '011',
                    '012',
                    '013',
                    '014',
                    '015',
                    '016',
                    '017',
                    '018',
                ]
            ],
            ['010-019', ['01']],
            [
                '74952200000-74952209999',
                [
                    7495220,
                ]
            ],
            [
                '74952201000-74952209999',
                [
                    74952201,
                    74952202,
                    74952203,
                    74952204,
                    74952205,
                    74952206,
                    74952207,
                    74952208,
                    74952209,
                ]
            ],
            [
                '74952201-74952209',
                [
                    74952201,
                    74952202,
                    74952203,
                    74952204,
                    74952205,
                    74952206,
                    74952207,
                    74952208,
                    74952209,
                ]
            ],
            [
                '74952200005-74952200199',
                [
                    74952200005,
                    74952200006,
                    74952200007,
                    74952200008,
                    74952200009,
                    7495220001,
                    7495220002,
                    7495220003,
                    7495220004,
                    7495220005,
                    7495220006,
                    7495220007,
                    7495220008,
                    7495220009,
                    749522001
                ]
            ],
            [
                '74952210000-74952210099',
                [
                    749522100,
                ]
            ],
            [
                '74952211000-74952211019',
                [
                    7495221100,
                    7495221101,
                ]
            ],
//            [
//                '74952211050-74952211132',
//                [
//                    7495221105,
//                    7495221106,
//                    7495221107,
//                    7495221108,
//                    7495221109,
//                    7495221110,
//                    7495221111,
//                    7495221112,
//                    74952211130,
//                    74952211131,
//                    74952211132,
//                ]
//            ],
//            [
//                '74952211134-74952211154',
//                [
//                    74952211134,
//                    74952211135,
//                    74952211136,
//                    74952211137,
//                    74952211138,
//                    74952211139,
//                    7495221114,
//                    74952211150,
//                    74952211151,
//                    74952211152,
//                    74952211153,
//                    74952211154
//                ]
//            ],
//            [
//                '74952200000-74952209999;74952210000-74952210099;74952211000-74952211019;74952211050-74952211132;74952211134-74952211154',
//                [
//                    7495220,
//                    749522100,
//                    7495221100,
//                    7495221101,
//                    7495221105,
//                    7495221106,
//                    7495221107,
//                    7495221108,
//                    7495221109,
//                    7495221110,
//                    7495221111,
//                    7495221112,
//                    74952211130,
//                    74952211131,
//                    74952211132,
//                    74952211132,
//                    74952211134,
//                    74952211135,
//                    74952211136,
//                    74952211137,
//                    74952211138,
//                    74952211139,
//                    7495221114,
//                    74952211150,
//                    74952211151,
//                    74952211152,
//                    74952211153,
//                    74952211154
//                ]
//            ],
        ];
    }


    /**
     * @dataProvider providerPrefixes
     */
    public function testPrefix($s, $a)
    {
        $this->assertInternalType('string', $s);
        $this->assertInternalType('array', $a);

        $result = $this->numbers()->prefix($s, $a);
        $this->assertEquals($a, $result);
    }
}
